expr = ...
builtin = ...

# Does not scope, stupidly
bind = ...
unbind = ...
rebind = ...

let = ...
where = ...

eval = ...
quote = ...

print = "<print>" expr "</print>"

# block = "<block>" return-expr* "</block>" # Contains exprs that can contain return statements

apply = ...

head = ...
tail = ...
get = ...
last = ...
first = ...

if = ...
while = ...
until = ...
for = ...

and = ...
or = ...
xor = ...
not = ...

pi = ...
euler = ...
phi = ...

add = "<add>" (int-expr | real-expr)* "<add>"
sub = ...
mult = ...
div = ...
mod = ...
pow = ...

name = "<name>" NAME "</name>"

const = int | real | bool | string | list | record | closure
int = "<int>" INT "</int>"
real = "<real>" REAL "</real>"
bool = "<bool>" BOOL "</bool>"
string = "<string>" STRING "</string>"
record = "<record>" ( name expr )* proto? ( name expr )* "</record>"
closure = "<closure>" name expr "</closure>"
list = "<list>" expr* "</list>"